<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add Product - Admin Dashboard</title>
    <!-- Include Tailwind CSS -->
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.16/dist/tailwind.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css">
</head>
<body class="bg-gray-100 font-sans">
    <!-- Sidebar -->
    <nav class="bg-gray-800 text-white h-screen w-64 fixed top-0 left-0 overflow-y-auto">
        <div class="p-4">
            <h1 class="text-2xl font-semibold">Admin Dashboard</h1>
        </div>
        <ul>
            <!-- Dashboard Link -->
            <li class="px-4 py-2 hover:bg-gray-700">
                <a href="#" class="block">
                    <span class="text-gray-300">Dashboard</span>
                </a>
            </li>
            <!-- User Management Link -->
            <li class="px-4 py-2 hover:bg-gray-700">
                <a href="/user" class="block">
                    <span class="text-gray-300">User Management</span>
                </a>
            </li>
            <!-- Product Management Link -->
            <li class="px-4 py-2 hover:bg-gray-700">
                <a href="productmanagement" class="block">
                    <span class="text-gray-300">Product Management</span>
                </a>
            </li>
            <li class="px-4 py-2 hover:bg-gray-700">
                <a href="/categories" class="block">
                    <span class="text-gray-300">Category Management</span>
                </a>
            </li>
            <!-- Product add Link -->
            <li class="px-4 py-2 hover:bg-gray-700">
                <a href="/addproducts" class="block">
                    <span class="text-gray-300">Add Product</span>
                </a>
            </li>
            <li class="px-4 py-2 hover:bg-gray-700">
                <a href="/adminOrder" class="block">
                    <span class="text-gray-300">Order Management</span>
                </a>
            </li>
        </ul>
    </nav>

    <!-- Content Area -->
    <div class="ml-64 p-6"> 
        <!-- Content Header -->
        <header class="bg-white shadow py-4 px-6">
            <div class="flex justify-between items-center">
                <h2 class="text-2xl font-semibold">Add Product</h2>
                <!-- Add user info or other header content here -->
            </div>
        </header>

        <!-- Main Content -->
        <main class="mt-6"> <!-- Added margin-top to separate from header -->
            <form action="/admin/add-product" method="post" enctype="multipart/form-data">
                <div class="mb-4">
                    <label for="name" class="block text-gray-700 font-semibold">Product Name</label>
                    <input type="text" id="name" name="name" class="w-full px-4 py-2 border rounded focus:outline-none focus:border-blue-500" required>
                </div>
                <div class="mb-4">
                    <label for="description" class="block text-gray-700 font-semibold">Description</label>
                    <textarea id="description" name="description" class="w-full px-4 py-2 border rounded focus:outline-none focus:border-blue-500" required></textarea>
                </div>
<div class="mb-4">
    <label for="category" class="block text-gray-700 font-semibold">Category</label>
    <select id="category" name="category" class="w-full px-4 py-2 border rounded focus:outline-none focus:border-blue-500" required>
        <option value="" disabled selected>Select a category</option>
        {{#each categories}}
        <option value="{{this.name}}">{{this.name}}</option>
        {{/each}}
    </select>
</div>

<div class="mb-4">
    <label for="subcategory" class="block text-gray-700 font-semibold">Sub-category</label>
    <select id="subcategory" name="subcategory" class="w-full px-4 py-2 border rounded focus:outline-none focus:border-blue-500" required>
        <option value="" disabled selected>Select a subcategory</option>
        {{#each categories}}
            {{#each this.subcategories}}
                <option value="{{this}}">{{this}}</option>
            {{/each}}
        {{/each}}
    </select>
</div>

                <div class="mb-4">
                    <label for="price" class="block text-gray-700 font-semibold">Price</label>
                    <input type="number" id="price" name="price" class="w-full px-4 py-2 border rounded focus:outline-none focus:border-blue-500" required min="0" >
                </div>
                <div class="mb-4">
                    <label for="quantity" class="block text-gray-700 font-semibold">Quantity</label>
                    <input type="number" id="quantity" name="quantity" class="w-full px-4 py-2 border rounded focus:outline-none focus:border-blue-500" required>
                </div>
                <div class="mb-4">
                    <label for="rating" class="block text-gray-700 font-semibold">Rating</label>
                    <input type="number" id="rating" name="rating" class="w-full px-4 py-2 border rounded focus:outline-none focus:border-blue-500" required>
                </div>
                <div class="mb-4">
                    <label for="offers" class="block text-gray-700 font-semibold">Offers</label>
                    <input type="text" id="offers" name="offers" class="w-full px-4 py-2 border rounded focus:outline-none focus:border-blue-500">
                </div>
                <div class="mb-4">
                    <label for="images" class="block text-gray-700 font-semibold">Images (Multiple)</label>
                    <input type="file" id="images" name="images" accept="image/*" multiple class="w-full px-4 py-2 border rounded focus:outline-none focus:border-blue-500" required>
                </div>
<div class="mb-4">
    <div class="crop-container">
        <img id="image-preview" src="#" alt="Cropped Image" class="img-preview">
    </div>
</div>

<!-- Add Crop and Save buttons -->
<div class="mb-4">
    <button type="button" id="crop-button" class="bg-green-500 hover-bg-green-600 text-white font-semibold px-4 py-2 rounded transition duration-300 ease-in-out">Crop</button>
    <button type="button" id="save-button" class="bg-blue-500 hover-bg-blue-600 text-white font-semibold px-4 py-2 rounded transition duration-300 ease-in-out">Save</button>
</div>

<!-- Add an input element for uploading the cropped image to the server -->
<input type="hidden" id="cropped-image" name="croppedImage" />


                <div class="mb-4">
                    <button type="submit" class="bg-blue-500 hover:bg-blue-600 text-white font-semibold px-4 py-2 rounded transition duration-300 ease-in-out">Add Product</button>
                </div>
            </form>
        </main>
    </div>
    <a href="/admindashboard">dashboard</a>
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
<script>
document.addEventListener("DOMContentLoaded", function () {
    const imageInput = document.getElementById("images");
    const imagePreview = document.getElementById("image-preview");
    const croppedImageInput = document.getElementById("cropped-image");
    let cropper;

    // Function to initialize Cropper with the image source
    function initializeCropper(src) {
        if (cropper) {
            cropper.destroy();
        }
        imagePreview.style.display = "block";
        imagePreview.src = src;

        // Initialize Cropper with options
        cropper = new Cropper(imagePreview, {
            aspectRatio: 1,
            viewMode: 1,
        });
    }

    imageInput.addEventListener("change", function () {
        const files = this.files;
        if (files && files.length > 0) {
            const reader = new FileReader();
            reader.onload = function (e) {
                initializeCropper(e.target.result);
            };
            reader.readAsDataURL(files[0]);
        }
    });

    // Add a crop button event listener
    const cropButton = document.getElementById("crop-button");
    cropButton.addEventListener("click", function () {
        if (cropper) {
            const croppedCanvas = cropper.getCroppedCanvas();
            const croppedDataUrl = croppedCanvas.toDataURL();
            initializeCropper(croppedDataUrl);

            // Set the cropped image data in the hidden input field
            croppedImageInput.value = croppedDataUrl;
        }
    });

    // Add a save button event listener
    const saveButton = document.getElementById("save-button");
    saveButton.addEventListener("click", function () {
        if (cropper) {
            const croppedCanvas = cropper.getCroppedCanvas();
            const croppedDataUrl = croppedCanvas.toDataURL();

            // Send the cropped image data to the server using XMLHttpRequest or fetch API
            const xhr = new XMLHttpRequest();
            xhr.open("POST", "/admin/add-product", true);
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.send(JSON.stringify({ croppedImage: croppedDataUrl }));

            // Handle the server response if needed
            xhr.onload = function () {
                if (xhr.status === 200) {
                    console.log("Image uploaded successfully.");
                } else {
                    console.error("Error in uploading the image.");
                }
            };
        }
    });
});
</script>

</body>
</html>