<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Product View</title>
    
    <link href="/dist/output.css" rel="stylesheet">
  
</head>
<body class="bg-gray-100">
    <div class="container mx-auto p-4 bg-white shadow-lg rounded-lg flex flex-wrap lg:flex-nowrap justify-between">
        <div class="w-full lg:w-1/2 lg:pr-8">
            <div class="p-4">
                <div class=" grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-1 gap-4">
                    {{#each product.images}}
                    <div class="img-zoom-container">
                        <img
                            src="/uploads/{{this}}"
                            alt="{{../product.name}}"
                            class="object-cover rounded-lg product-image zoom-image"
                            data-zoom="/uploads/large/{{this}}"
                            style="margin-left: 50px; max-width: 40%; max-height: 400px; background-image: url('/uploads/{{this}}'); background-position: center center;">
                        
                        <!-- Add the zoom lens and result elements -->
                        <div class="img-zoom-lens"></div>
                        <div class="img-zoom-result"></div>
                    </div>
                    {{/each}}
                </div>
            </div>
        </div>
        <div class="w-full lg:w-1/2">
            <div class="p-4">
                <h1 class="text-3xl font-semibold text-gray-800 mb-2">{{product.name}}</h1>
                <div class="flex items-center mb-4">
                    <div class="text-gray-600">Average Rating:</div>
                    <div class="text-yellow-500 ml-2">
                        <i class="fas fa-star"></i>
                        <i class="fas fa-star"></i>
                        <i class="fas fa-star"></i>
                        <i class="fas fa-star"></i>
                        <i class="far fa-star"></i>
                    </div>
                </div>
                <p class="text-2xl text-orange-500 font-bold mb-4">Rs. {{product.price}}</p>
                <p class="text-lg text-gray-700 mb-6">{{product.description}}</p>
                <div id="cartMessage" class="bg-green-500 text-white px-4 py-2 rounded-full mb-4 hidden">Product added to cart!</div>
               <a href="#" class="block w-full bg-orange-500 text-white text-center py-2 rounded-lg mb-2 hover:bg-orange-600 transition duration-300 ease-in-out add-to-cart-btn" data-productid="{{product._id}}">
                Add to Cart
                </a>

                <a href="#" class="block w-full bg-blue-500 text-white text-center py-2 rounded-lg mb-2 hover:bg-blue-600 transition duration-300 ease-in-out">
                    Buy Now
                </a>
                <a href="#" class="block w-full bg-gray-500 text-white text-center py-2 rounded-lg hover:bg-gray-600 transition duration-300 ease-in-out">
                    Add to Wishlist
                </a>
            </div>
        </div>
    </div>
    
   
    <div class="container mx-auto mt-8">
        <h2 class="text-3xl font-semibold text-gray-800">Product Details</h2>
        <div class="bg-white rounded-lg p-4 shadow-md mt-4">
            <!-- Review 1 -->
            <div class="mb-4">
                <p class="text-xl font-semibold text-gray-800">A shirt with a printed description typically means a piece of clothing, usually made of fabric, with words, images, or designs printed on it. These prints can vary widely, from simple logos or quotes to intricate artworks or patterns.</p>
                <div class="text-gray-600">Rated 4.5/5</div>
            </div>
        </div>
        
        <section class="bg-white py-8 mt-8">
            <div class="container mx-auto">
                <h2 class="text-3xl font-semibold mb-4 text-center">Customer Reviews</h2>
                <!-- Individual review cards -->
                <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
                    <!-- Review Card 1 -->
                    <div class="bg-gray-100 rounded-lg p-4">
                        <h3 class="text-xl font-semibold mb-2">Great Product!</h3>
                        <p class="text-gray-600">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam convallis nulla a purus cursus.</p>
                        <div class="text-gray-400 text-sm mt-2">- John Doe</div>
                    </div>

                    <!-- Review Card 2 -->
                    <div class="bg-gray-100 rounded-lg p-4">
                        <h3 class="text-xl font-semibold mb-2">Highly Recommended!</h3>
                        <p class="text-gray-600">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam convallis nulla a purus cursus.</p>
                        <div class="text-gray-400 text-sm mt-2">- Jane Smith</div>
                    </div>

                    <!-- Add more review cards as needed -->
                </div>

                <!-- Add a button to write a review -->
                <div class="text-center mt-4">
                    <a href="/write-review" class="bg-nav-bar-red text-white px-4 py-2 rounded-full hover:bg-opacity-80 transition duration-300 ease-in-out">Write a Review</a>
                </div>
            </div>
        </section>
    </div>
     <script>
     document.addEventListener('DOMContentLoaded', () => {
    const addToCartButtons = document.querySelectorAll('.add-to-cart-btn');
    addToCartButtons.forEach((button) => {
        button.addEventListener('click', (event) => {
            event.preventDefault();
            const productId = button.getAttribute('data-productid');
            fetch(`/cart/add/${productId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                // include any data need in the request body
                body: JSON.stringify({ productId }),
            })
            .then((response) => response.json())
            .then((data) => {
                console.log(data.message);
                console.log(data.cart); // The updated cart data
                
                // Show the cart message
                const cartMessage = document.getElementById('cartMessage');
                cartMessage.style.display = 'block';
                
                // Hide the cart message after a few seconds (e.g., 3 seconds)
                setTimeout(() => {
                    cartMessage.style.display = 'none';
                }, 1000); 
            })
            .catch((error) => {
                console.error('Error adding product to cart:', error);
            });
        });
    });
});

    </script>
</body>
</html>
</body>
</html>