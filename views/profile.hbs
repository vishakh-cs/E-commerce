<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Profile</title>
     <link href="/dist/output.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.15/dist/tailwind.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10.15.5/dist/sweetalert2.min.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10.15.5/dist/sweetalert2.all.min.js"></script>
    <style>
        /* General Styles */
        body {
            margin: 0;
            padding: 0;
            font-family: Arial, sans-serif;
        }

        /* Header */
        header {
            background-color: #d9534f;
            color: white;
            padding: 10px 20px;
            display: flex;
            justify-content: space-between;
        }

        header a {
            color: white;
            text-decoration: none;
        }

        /* Navigation */
        nav ul {
            list-style: none;
            display: flex;
        }

        nav li {
            margin-right: 20px;
        }

        /* User Profile Image */
        .profile-image-container {
            width: 100px;
            height: 100px;
            border-radius: 50%;
            overflow: hidden;
        }

        .profile-image {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        /* Main Content Container */
        .main-container {
            padding: 20px;
            display: flex;
            flex-wrap: wrap;
        }

        /* User Information Section */
        .user-info {
            flex: 1;
            margin: 10px;
            background-color: #f5f5f5;
            padding: 20px;
            border: 1px solid #e0e0e0;
            border-radius: 8px;
            box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
        }

        .user-info h2 {
            font-size: 1.5rem;
        }

        .user-info p {
            margin: 5px 0;
        }

        /* Change Password Button */
        .change-password-btn {
            background-color: #d9534f;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        /* Wallet Button */
        .wallet-btn {
            background-color: #ffa500;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        /* Wallet Modal */
        .wallet-modal {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: #ffa500;
            color: white;
            border-radius: 5px;
            padding: 20px;
            z-index: 999;
        }

        /* Recent Order Section */
        .recent-orders {
            flex: 1;
            margin: 10px;
            background-color: #f5f5f5;
            padding: 20px;
            border: 1px solid #e0e0e0;
            border-radius: 8px;
            box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
        }

        .recent-orders h2 {
            font-size: 1.5rem;
        }

        .order-table {
            width: 100%;
            border-collapse: collapse;
        }

        .order-table th, .order-table td {
            border: 1px solid #e0e0e0;
            padding: 10px;
        }

        /* Address Section */
        .addresses {
            flex: 1;
            margin: 10px;
        }

        .address-item {
            background-color: #f5f5f5;
            margin: 10px 0;
            padding: 20px;
            border: 1px solid #e0e0e0;
            border-radius: 8px;
            box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
        }

        /* Add Address Button */
        .add-address-btn {
            background-color: #428bca;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        /* Footer */
        footer {
            background-color: #428bca;
            color: white;
            padding: 10px 20px;
        }

         @media (max-width: 768px) {
            /* User Information Section Styles for smaller devices */
            .section {
                margin-bottom: 20px;
                /* Add spacing between sections */
            }
        }

        @media (max-width: 480px) {
            /* Additional responsive styles for even smaller devices */
            .section {
                /* Add specific styles for smaller devices */
            }
        }

            nav ul {
                flex-direction: column;
                text-align: center;
            }

            nav li {
                margin-right: 0;
                margin-bottom: 10px;
            }

            /* Main Content Container - Stack user info and recent orders on small screens */
            .main-container {
                flex-direction: column;
            }

            /* User Information Section - Center align on small screens */
            .user-info {
                text-align: center;
            }

            /* Recent Order Section - Center align on small screens */
            .recent-orders {
                text-align: center;
            }

            /* Wallet Modal - Increase padding on small screens */
            .wallet-modal {
                padding: 20px;
            }
        }
    </style>
</head>
<body class="overflow-x-hidden">
     <!-- Header -->
    <header class="bg-nav-bar-red text-white py-4 xl:py-5">
        <div class="container mx-auto flex justify-between items-center">
            <h1 class="font-display text-xl"><strong> <a href="/"> Classic Soul</a></strong> </h1>
            <!-- Navigation menu with Men and Women links -->
            <nav class="hidden md:block">
                <ul class="flex px-4 font-semibold font-heading space-x-12">
                    <li><a class="hover:text-gray-200" href="/category">Category</a></li>
                </ul>
            </nav>
            <div class="hidden xl:flex items-center space-x-5">
                <a class="hover:text-gray-200 flex items-center" href="/wishlist">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                    </svg>
                    <span class="ml-2">Wishlist</span>
                </a>
                <a class="flex items-center hover:text-gray-200" href="/cart/{{user._id}}">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z" />
                    </svg>
                    <span class="ml-2">Cart</span>
                    <span class="flex absolute -mt-5 ml-4">
                        <span class="animate-ping absolute inline-flex h-3 w-3 rounded-full bg-pink-400 opacity-75"></span>
                        <span class="relative inline-flex rounded-full h-3 w-3 bg-pink-500"></span>
                    </span>
                </a>
                <!-- Sign In / Register -->
                <a class="flex items-center hover:text-gray-200" href="/profile">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 hover:text-gray-200" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                    </svg>
                    <span class="ml-2">Profile</span>
                </a>
            </div>
            <!-- Responsive navbar -->
            <a class="xl:hidden flex mr-6 items-center" href="#">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 hover:text-gray-200" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 1000 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z" />
                </svg>
                <span class="flex absolute -mt-5 ml-4">
                    <span class="animate-ping absolute inline-flex h-3 w-3 rounded-full bg-pink-400 opacity-75"></span>
                    <span class="relative inline-flex rounded-full h-3 w-3 bg-pink-500"></span>
                </span>
            </a>
            <a class="navbar-burger self-center mr-12 xl:hidden" href="#">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 hover:text-gray-200" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
                </svg>
            </a>
        </div>
    </header>

    <nav class="bg-nav-bar-red p-4">
        <div class="container mx-auto text-white">
            <!-- Your navigation content here -->
        </div>
    </nav>

<header class="bg-white shadow-md py-8">
    <div class="container mx-auto flex items-center">
        <div class="w-1/4">
            <div class="w-32 h-32 bg-gray-200 rounded-full overflow-hidden mx-auto">
                <img id="profileImage" src="/{{ user.profileImage }}" alt="User Profile Picture" class="w-full h-full object-cover">
            </div>
        </div>
        <div class="w-3/4 ml-8">
            <h1 class="text-3xl font-semibold">{{ user.username }}</h1>
            <p class="text-gray-600">{{ user.email }}</p>
        </div>

        <!-- Wallet Link (Right-aligned) -->
<!-- Wallet Button -->
<button class="text-yellow-50 w-36 bg-orange-400 rounded-2xl h-16 px-3 hover:underline ml-auto mt-4 inline-flex items-center" id="walletButton">
    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 fill-current mr-2" viewBox="0 0 20 20">
        <path d="M2 3a2 2 0 012-2h14a2 2 0 012 2v16a2 2 0 01-2 2H4a2 2 0 01-2-2V3zm5 12a3 3 0 100-6 3 3 0 000 6z"/>
    </svg>
    <strong> Wallet</strong>
</button>

<!-- Wallet Modal -->
<div class="w-2/5 bg-amber-950 fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-white rounded-lg shadow-lg p-8 z-50 hidden" id="walletModal">
    <div class="mb-4 text-center"></div>
    <h2 class="text-2xl font-semibold text-center mb-4">My Wallet</h2>
    <div class="mb-4">
        <div class="w-3/4 ml-8">
            <h1 class="text-3xl font-semibold">{{ user.username }}</h1>
            <p class="text-white">{{ user.email }}</p>
            <p class="text-white">Wallet Amount: ${{ walletAmount }}</p>
        </div>
    </div>

    <!-- Display wallet transactions -->
    <div class="mb-4 wallet-transactions" style="max-height: 200px; overflow-y: auto;">
        <h3 class="text-2xl font-semibold mb-2">Wallet Transactions</h3>
        <ul>
            {{#each walletTransactions}}
            <li>
                <p>Type: {{ type }}</p>
                <p>Amount: ${{ amount }}</p>
                <p>Description: {{ description }}</p>
                <p>Date: {{ date }}</p>
            </li>
            {{/each}}
        </ul>
    </div>

    <button class="bg-red-500 text-white py-2 px-4 rounded-md hover:bg-red-700 w-full" id="closeWalletModal">Close</button>
</div>




</header>


<div class="container mx-auto py-4">
    <form action="/profile/upload" method="POST" enctype="multipart/form-data">
        <input type="file" name="profileImage">
        <button type="submit">Upload</button>
    </form>
</div>

<div class="container mx-auto flex justify-between items-center">
    <a href="/logout"  class="bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded-lg inline-block">
        Logout
    </a>
</div>
  <!-- User profile section -->
    <section class="container mx-auto py-8 flex grow-0">
        <div class="w-1/2 bg-white p-6 shadow-md rounded-lg mr-4 fixed-size-div" style="height: 60vh;">
    <div class="section">

        <h2 class="text-xl font-semibold mb-4">User Information</h2>
        
        <div class="bg-gray-800 text-white  w-72 h-8 flex justify-center items-center mt-4">
                  <a href="/cart/{{ user._id}}"><strong>  Go to Cart</strong></a>
                  <img class="w-10 h-8 ml-24 rounded-2xl" src="/images/shopping-cart.gif" >
        </div>  
        <div class="mt-7">
           <p><strong>Email:</strong> <span class="ml-4" id="userEmail">{{ user.email }}</span> <button class="ml-9" onclick="editEmail()"><strong>Edit</strong> </button></p>
        </div><br>
       <label ><strong>Change Password</strong></label><br>
       <div class="mt-5">

       <strong class="bg-red-500 text-white py-3 px-5 rounded-xl" id="changePasswordLink">Change Password</strong>
       </div>
       <br>
       <div class="mt-7 bg-gray-400 w-1/3 h-7 rounded-md" >
           
        <p><strong class=" rounded-md ">Referral Code  :</strong> <span class="ml-4" id="referralCode"><strong>{{referral.referralCode}}</strong></span></p>
          <br>
<!-- profile.hbs -->
{{#if referral.isRefferalVerified}}
  <p class="text-slate-700 font-serif">Your already Entered referral Code.</p>
{{else}}
  <form action="/profile/updateReferral" method="POST" class="flex items-center">
    <div class="flex-1 mr-4">
      <label for="referralCode" class="block text-gray-700 font-bold mb-2">Enter Referral Code:</label>
      <input type="text" name="referralCode" id="referralCode" class="w-64 py-2 px-3 border rounded-md focus:outline-none focus:border-blue-500" placeholder="Enter your referral code" required>
    </div>
    <button type="submit" class="bg-blue-500 mt-8 text-white py-2 px-4 rounded-md hover:bg-blue-700">Submit</button>
  </form>
{{/if}}

    </div>
</div>
</div>
    </div>
{{!-- recent order section --}}
<div class="section">
<div class="w-1/2 bg-white p-6 shadow-md rounded-lg ml-4 recent-orders-container">
    <h2 class="text-xl font-semibold mb-4">Recent Order</h2>
<table class="w-full border-collapse border border-gray-300">
    <thead>
        <tr>
            <th class="border border-gray-300 py-2 px-4">Order ID</th>
            <th class="border border-gray-300 py-2 px-4">Status</th>
            <th class="border border-gray-300 py-2 px-4">Total Price</th>
            <th class="border border-gray-300 py-2 px-4">Product Image</th>
            <th class="border border-gray-300 py-2 px-4">Actions</th>
        </tr>
    </thead>
    <tbody>
        {{#each user.recentOrders}}
            {{#each products}}
                <tr class="text-center order-row" data-order-id="{{ ../orderId }}">
                    <td class="border border-gray-300 py-2 px-4">{{ ../orderId }}</td>
                    <td class="border border-gray-300 py-2 px-4">{{ ../status }}</td>
                    <td class="border border-gray-300 py-2 px-4">${{ ../totalPrice }}</td>
                    <td class="border border-gray-300 py-2 px-4">
                        <img src="/uploads/{{ productImage }}" alt="Product Image" class="w-16 h-16 object-cover">
                    </td>
                    <td class="border border-gray-300 py-2 px-4">
                        
                        <!-- Cancel Order Button -->
                        <form action="/cancelOrder/{{ ../orderId }}" method="POST">
                            <button type="button" class="text-red-500 hover:underline" onclick="cancelOrder('{{ ../orderId }}')">Cancel Order</button>
                        </form>
                    </td>
                  <td class="border border-gray-300 py-2 px-4">
    <form action="/viewOrder/{{ ../orderId }}" method="POST">
        <button type="button" class="text-blue-500 hover:underline view-order-button" onclick="viewOrderDetails('{{ ../orderId }}')">View Details</button>
    </form>
</td>

                    
                </tr>
            {{/each}}
        {{/each}}
    </tbody>
</table>

</div>
</div>


        </div>
    </section>
     <div class="section">
<section class="container mx-auto py-8 flex">
    <div class="w-1/2 bg-white p-6 shadow-md rounded-lg mr-4 fixed-size-div">
        <h2 class="text-xl font-semibold mb-4">Addresses</h2>
        <div>
            <ul>
                {{#each user.addresses}}
                    <li class="address-item flex justify-between items-center mb-4" data-address-id="{{this._id}}">
                        <div>
                            <p><strong>{{this.tag}} Saved Address:</strong></p>
                            <p>Address: {{this.address}}</p>
                            <p>City: {{this.city}}</p>
                            <p>Pin: {{this.pin}}</p>
                            <p>Phone: {{this.phone}}</p>
                            <p>State: {{this.state}}</p>
                            <p>Country: {{this.country}}</p>
                        </div>
                        <div class="mb-2">
                            <input type="radio" id="primary-address-{{this._id}}" name="primary-address" value="{{this._id}}" class="mr-2">
                            <label for="primary-address-{{this._id}}" class="text-blue-500 font-semibold">Primary Address</label>
                            <button onclick="setPrimaryAddress('{{this._id}}')" class="ml-2">Set Primary</button>
                        </div>
                        <form action="/profile/deleteAddress/{{this._id}}" method="post">
                            <button class="text-red-500 hover:underline" type="submit">Delete</button>
                        </form>
                    </li>
                    {{/each}}
                </ul>
            </div>
        </div>
    </section>
    
  <button id="addAddressButton" class="bg-blue-500 text-white py-2 px-4 ml-24 rounded-lg">Add New Address</button>
    <footer class="bg-blue-500 p-4 mt-8">
        <div class="container mx-auto text-white">
            </div>
            <!-- Your footer content here -->
        </div>
    </footer>

    <script>
const urlParam = new URLSearchParams(window.location.search);
const SameReferralCode = urlParam.get('cantEnterSameReferralCode');
function displayMessage1() {
    if (SameReferralCode === 'true') {
        Swal.fire({
            title: 'Cant enter Same Referral Code',
            text: 'The referral code you are try to use is Your Referral Code try Other.',
            icon: 'warning',
            confirmButtonColor: '#3085d6',
            confirmButtonText: 'OK',
        });
        }
       }
displayMessage1();


    </script>

    <script>
 // Check if the URL contains the query parameter 'alreadyExitedRefferal'
const urlParams = new URLSearchParams(window.location.search);
const alreadyExitedRefferal = urlParams.get('InvalidRefferal');

// Function to display a message based on the query parameter
function displayMessage() {
    if (alreadyExitedRefferal === 'true') {
        // Show a message to the user
        Swal.fire({
            title: 'Invalid Refferal Code',
            text: 'The referral code you are try to use is invalid please try Other.',
            icon: 'warning',
            confirmButtonColor: '#3085d6',
            confirmButtonText: 'OK',
        });
    }
}

// Call the function to display the message
displayMessage();

    </script>
    <script>
function viewOrderDetails(orderId) {
    // Navigate to the order details page
    window.location.href = `/viewOrder/${orderId}`;
}
    </script>
    <script>
        const walletButton = document.getElementById("walletButton");
        const walletModal = document.getElementById("walletModal");
        const closeWalletModalButton = document.getElementById("closeWalletModal");

        walletButton.addEventListener("click", () => {
            walletModal.style.display = "block";
        });

        closeWalletModalButton.addEventListener("click", () => {
            walletModal.style.display = "none";
        });
    </script>

    <script>
 
    document.getElementById("changePasswordLink").addEventListener("click", function() {
        window.location.href = "/changepassword";
    });
</script>

     <script>
function cancelOrder(orderId) {
    Swal.fire({
        title: 'Confirm Cancellation',
        text: 'Are you sure you want to cancel this order?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#d33',
        cancelButtonColor: '#3085d6',
        confirmButtonText: 'Yes, cancel it',
        cancelButtonText: 'No, keep it',
    }).then((result) => {
        if (result.isConfirmed) {
            // Send a request to cancel the order here
            fetch(`/cancelOrder/${orderId}`, {
                method: 'POST',
            })
            .then((response) => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then((data) => {
                // Handle success, e.g., display a success message
                Swal.fire('Order Cancelled', 'The order has been successfully cancelled.', 'success');
            })
                            // Reload the page
                location.reload();
        }
    });
}
        function setPrimaryAddress(addressId) {
            // Send a POST request to set the address as primary
            fetch(`/api/setPrimaryAddress/${addressId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
            })
            .then((response) => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then((data) => {
                
                console.log(data.message);
            })
            .catch((error) => {
              
                console.error('Error:', error);
            });
        }
        
        var addAddressButton = document.getElementById("addAddressButton");
        addAddressButton.addEventListener("click", function () {
            // Get the number of addresses
            var addressesCount = document.querySelectorAll(".address-item").length;
            
            if (addressesCount >= 2) {
                alert("You already have two or more addresses. You cannot add more.");
            } else {
                // Redirect to the addnewaddress page
                window.location.href = "/addnewaddress";
            }
        });
    </script>
<script>
    function editEmail() {
    const userEmailElement = document.getElementById("userEmail");
    const currentEmail = userEmailElement.textContent;

    // Create an input field for editing
    const emailInput = document.createElement("input");
    emailInput.type = "email";
    emailInput.value = currentEmail;

    // Replace the email text with the input field
    userEmailElement.innerHTML = "";
    userEmailElement.appendChild(emailInput);

    // Add a "Save" button
    const saveButton = document.createElement("button");
    saveButton.textContent = "Save";
    saveButton.onclick = saveEmail;

    userEmailElement.appendChild(saveButton);
}
function saveEmail() {
    const userEmailElement = document.getElementById("userEmail");
    const newEmail = userEmailElement.querySelector("input").value;

    // Send a request to update the user's email
    fetch("/user/updateEmail", {
        method: "POST",
        headers: {
            "Content-Type": "application/json",
        },
        body: JSON.stringify({ newEmail: newEmail }),
    })
        .then((response) => {
            if (!response.ok) {
                throw new Error("Network response was not ok");
            }
            return response.json();
        })
        .then((data) => {
           
            console.log(data.message);

            // Replace the input field with the new email
            userEmailElement.innerHTML = newEmail;
        })
        .catch((error) => {
            
            console.error("Error:", error);
        });
}

</script>

</body>
</html>
