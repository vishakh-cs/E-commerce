<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Checkout</title>
    <!-- Link to Tailwind CSS CDN -->
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.7/dist/tailwind.min.css" rel="stylesheet">
    <!-- Razorpay script -->
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <!-- jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>
<style>
    /* Custom styles for payment methods */
    .payment-method {
        display: flex;
        align-items: center;
        margin-bottom: 10px;
        cursor: pointer;
    }

    .payment-icon {
        width: 30px;
        height: 30px;
        margin-right: 10px;
    }
</style>

<body class="bg-gray-100">
    <div class="container mx-auto p-8">
        <h1 class="text-3xl font-semibold mb-8 text-center">Checkout</h1>

        <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
            <!-- Payment Information (Left Side) -->
            <div class="bg-white rounded-lg p-4 shadow-md">
                <div class="mb-4">
                    <h2 class="text-xl font-semibold">Payment Information</h2>
                </div>
                <div class="payment-method mb-2">
                    <img src="https://static.vecteezy.com/system/resources/previews/000/574/730/large_2x/credit-card-icon-vector.jpg"
                        alt="Credit Card" class="payment-icon">
                    <input type="radio" id="credit-card" name="payment-method" value="credit-card" class="mr-2" checked>
                    <label for="credit-card" class="text-blue-500 font-semibold">Credit Card</label>
                </div>
                <div class="payment-method mb-2">
                    <img src="https://th.bing.com/th/id/OIP.Naqd2InLp3W58CUf3FrbSAAAAA?pid=ImgDet&rs=1"
                        alt="Bank Transfer" class="payment-icon">
                    <input type="radio" id="bank-transfer" name="payment-method" value="bank-transfer" class="mr-2">
                    <label for="bank-transfer" class="text-blue-500 font-semibold">Bank Transfer</label>
                </div>
                <div class="payment-method mb-2">
                    <img src="https://www.bdsdtechnology.com/webroot/images/UPI.png" alt="UPI Transfer"
                        class="payment-icon">
                    <input type="radio" id="upi-transfer" name="payment-method" value="upi-transfer" class="mr-2">
                    <label for="upi-transfer" class="text-blue-500 font-semibold">UPI Transfer</label>
                </div>
                 <div class="payment-method mb-2">
                    <img src="https://th.bing.com/th/id/OIP.WKdXg3kgDga65sdmAAuCZQHaGE?pid=ImgDet&rs=1" alt="wallet Transfer"
                        class="payment-icon">
                    <input type="radio" id="wallet-transfer" name="payment-method" value="wallet-transfer" class="mr-2">
                    <label for="wallet-transfer" class="text-blue-500 font-semibold">Wallet</label>
                </div>
                <div class="payment-method mb-2">
                    <img src="https://png.pngtree.com/png-clipart/20210523/original/pngtree-cash-on-delivery-pin-point-png-image_6331307.jpg"
                        alt="Cash on Delivery" class="payment-icon">
                    <input type="radio" id="cash-on-delivery" name="payment-method" value="cash-on-delivery"
                        class="mr-2">
                    <label for="cash-on-delivery" class="text-blue-500 font-semibold">Cash on Delivery</label>
                </div>
            </div>


            <!-- Order Summary (Right Side) -->
<div class="bg-white rounded-lg p-4 overflow-auto shadow-md">
    <h2 class="text-xl font-semibold mb-4">Order Summary</h2>
    <ul>
        {{#each cartProducts}}
        <li class="flex justify-between mb-2 items-center">
            <div class="flex items-center">
                <img src="/uploads/{{this.product.images}}" alt="{{this.product.name}}" class="w-24 h-32 mr-4">
                <span class="font-semibold text-gray-800">{{this.product.name}}</span>
            </div>
            {{#if this.product.offerPrice}}
                <span>{{this.quantity}} x ${{this.product.offerPrice}} (Offer Price)</span>
            {{else}}
                <span>{{this.quantity}} x ${{this.product.price}}</span>
            {{/if}}
        </li>
        <input type="hidden" id="productName" value="{{this.product.name}}">
        {{/each}}
    </ul>
    <div class="mt-4">
      <span>Coupon Discount:</span>
    <span id="couponDiscount" class="text-red-600">Rs. {{discountAmount}}</span>
</div>
<hr class="my-2">
<div class="flex justify-between font-semibold">
    <span>Total:</span>
    {{#if discountAmount}}
        <span id="totalPriceSummary" class="text-green-600">${{discountAmount}}</span>
    {{else}}
        <span id="totalPriceSummary" class="text-green-600">${{totalPrice}}</span>
    {{/if}}
    <input type="hidden" id="productPrice" value="{{discountAmount}}">
</div>
</div>

        </div>

        <!-- Delivery Information  -->
        <div class="grid grid-cols-1 md:grid-cols-2 gap-8 mt-8">
            <!-- Delivery Options -->
            <div class="bg-white rounded-lg p-4">
                <h2 class="text-xl font-semibold mb-4">Delivery Options</h2>
                <div class="mb-2">
                    <input type="radio" id="standard-shipping" name="delivery-option" value="standard" class="mr-2"
                        checked>
                    <label for="standard-shipping" class="text-blue-500 font-semibold">Standard Shipping</label>
                </div>
                <div class="mb-2">
                    <input type="radio" id="express-shipping" name="delivery-option" value="express" class="mr-2">
                    <label for="express-shipping" class="text-blue-500 font-semibold">Express Shipping</label>
                </div>
<!-- Coupon Code Input Field -->
<div class="mt-4">
    <form id="coupon-form" action="/applyDiscount" method="post">
            <input type="hidden" name="userID" value="{{user._id}}">
                {{#each cartProducts}}
        <input type="hidden" name="productID" value="{{this.product._id}}">
                 {{/each}}
        <div class="coupon-container flex items-center">
            <input type="text" id="coupon-code" name="couponCode" placeholder="Enter Coupon Code" class="w-40 px-4 py-2 border rounded-l focus:outline-none focus:border-blue-500">
            <button id="apply-coupon-button" class="bg-blue-500 hover:bg-blue-700 text-white font-semibold py-2 px-4 rounded-r focus:outline-none" onclick="applyCoupon">
                Apply Coupon
            </button>
        </div>
        <p id="invalid-coupon-message" class="text-red-600">Invalid coupon</p>
    </form>
</div>


            </div>

            <!-- User Addresses -->
            <div class="bg-white rounded-lg p-4">
                <h2 class="text-xl font-semibold mb-4">Addresses</h2>
                <ul>
                    {{#each user.addresses}}
                    {{#if primary}}
                    <li class="address-item flex justify-between items-center mb-4" data-address-id="{{_id}}">
                        <div>
                            <p><strong>{{tag}} Saved Address:</strong></p>
                            <p>Address: {{address}}</p>
                            <p>City: {{city}}</p>
                            <p>Pin: {{pin}}</p>
                            <p>Phone: {{phone}}</p>
                            <p>State: {{state}}</p>
                            <p>Country: {{country}}</p>
                        </div>
                    </li>
                    {{/if}}
                    {{/each}}
                </ul>
         {{#if user.addresses.length}}
        <button id="add-address-button"
            class="bg-blue-500 hover:bg-blue-700 text-white font-semibold py-2 px-4 rounded-full mt-4"
            onclick="redirectToNewAddressCheckout()">Add New Address</button>
        {{else}}
        <p class="text-red-500 mt-4">No address found. Please add an address.</p>
        {{/if}}
                <button id="add-address-button"
                    class="bg-blue-500 hover:bg-blue-700 text-white font-semibold py-2 px-4 rounded-full mt-4"
                    onclick="redirectToNewAddressCheckout()">Add New Address</button>
            </div>
        </div>

        <div class="text-center mt-8">
            <!-- Add a Razorpay payment button with the order details -->
<div class="text-center mt-8">
    <p id="address-message" class="text-red-600 mb-4">Please add an address to complete the purchase.</p>
    <button id="complete-purchase-button"
        class="bg-indigo-500 hover-bg-indigo-700 text-white font-semibold py-2 px-4 rounded-full focus:outline-none focus:ring focus:ring-indigo-200 focus:ring-opacity-50"
        onclick="completePurchase()">Complete Purchase</button>
</div>

    </div>
    </div>
    <script>
function updateCouponMessage() {
    const invalidCouponMessage = document.getElementById('invalid-coupon-message');
    const urlParams = new URLSearchParams(window.location.search);
    const isInvalidCoupon = urlParams.get('InvalidCode') === 'true';

    // Remove the InvalidCode query parameter from the URL
    if (isInvalidCoupon) {
        urlParams.delete('InvalidCode');
        const newUrl = window.location.pathname + '?' + urlParams.toString();
        window.history.replaceState({}, document.title, newUrl);
    }

    if (invalidCouponMessage) {
        invalidCouponMessage.style.display = isInvalidCoupon ? 'block' : 'none';
    }
}

// Call the function initially to set the message state based on the query parameter
updateCouponMessage();

    </script>
    <script>
function updateCompletePurchaseButtonState() {
    const completePurchaseButton = document.getElementById('complete-purchase-button');
    const addressMessage = document.getElementById('address-message');
    const hasAddresses = {{user.addresses.length}} > 0; // Replace this with the actual logic to check if the user has addresses

    if (completePurchaseButton) {
        completePurchaseButton.disabled = !hasAddresses;
    }

    if (addressMessage) {
        addressMessage.style.display = hasAddresses ? 'none' : 'block';
    }
}

   // Call the function initially to set the button and message state based on addresses
   updateCompletePurchaseButtonState();
  
    </script>

    <script>
        function redirectToNewAddressCheckout() {
            window.location.href = '/addnewaddress';
        }
    </script>

    <script>
        function completePurchase() {
            const selectedPaymentMethod = document.querySelector('input[name="payment-method"]:checked');

            if (selectedPaymentMethod) {
                const paymentMethod = selectedPaymentMethod.value;
              if (paymentMethod === 'cash-on-delivery') {
               
                $.ajax({
                    url: '/createOrder',
                    type: 'POST',
                    data: { paymentMethod: paymentMethod },
                    success: function (res) {
                        if (res.success) {
                            window.location.href = '/ordersuccess';
                        } else {
                            alert('Error creating order: ' + res.msg);
                        }
                    }
                });
                    window.location.href = '/ordersuccess';
                } else if (paymentMethod === 'credit-card') {
                    

                    // Get product details from hidden input fields
                    const productName = document.getElementById('productName').value;
                    const productPrice = parseInt(document.getElementById('productPrice').value);


                    // Create a Razorpay order
                    $.ajax({
                        url: '/createOrder',
                        type: 'POST',
                        data: { productName, productPrice , paymentMethod: paymentMethod },
                        success: function (res) {
                            if (res.success) {
                                var options = {
                                    key: res.key_id,
                                    amount: res.amount,
                                    currency: "INR",
                                    name: res.name,
                                    description: res.description,
                                    image: 'https://yourcompany.com/logo.png',
                                    order_id: res.order_id,
                                    handler: function (response) {
                                        // Check if the payment was successful
                                        if (response.razorpay_payment_id) {
                                            alert('Payment successful');
                                            window.location.href = '/ordersuccess';
                                        } else {
                                            alert('Payment failed');
                                        }
                                    },
                                    prefill: {
                                        name: res.name,
                                        email: res.email,
                                        contact: res.contact
                                    }
                                };
                                var rzp = new Razorpay(options);
                                rzp.open();
                            } else {
                                alert('Error creating order: ' + res.msg);
                            }
                        }
                    });
                } else if (paymentMethod === 'wallet-transfer') {
                const productName = document.getElementById('productName').value;
                const productPrice = parseInt(document.getElementById('productPrice').value);

                $.ajax({
                    url: '/createOrder',
                    type: 'POST',
                    data: { productName, productPrice, paymentMethod: paymentMethod },
                    success: function (res) {
                        if (res.success) {
                            alert('Payment from wallet successful');
                            window.location.href = '/ordersuccess';
                        } else {
                            alert('Error creating wallet order: ' + res.msg);
                        }
                    }
                });
            }
        } else {
            alert('Please select a payment method.');
        }
    }
</script>
</body>

</html>